insert into tb_quest values(quest_seq.nextval, 
1, 
'관계해석에 대한 설명으로 옳지 않은 것은?
① 수학의 프레디킷 해석에 기반을 두고 있다.
② 관계 데이터 모델의 제안자인 코드(Codd)가 관계 데이터베이스에 적용할 수 있도록 설계하여 제안하였다.
③ 튜플 관계해석과 도메인 관계해석이 있다.
④ 원하는 정보와 그 정보를 어떻게 유도하는가를 기술하는 절차적 특성을 가진다.', 
4, 
'4번은 관계대수에 대한 설명입니다.
관계해석- E.F.Codd 코드가 수학의 Predicate프레디켓 calculus 에 기반을 두고 제안했다-비절차적 특성을 지닌다-튜플관계해석과 도메인 관계해석이 있다-계산 수식을 사용해 어떤 데이터를 가져올지 명시@관계해석과 관계대수는 관계 데이터베이스를 처리하는 기능과 능력면에서 동등하다', 
'관계해석',
 0)
 
 
 
insert into tb_quest values(quest_seq.nextval, 
1, 
'색인 순차 파일에 대한 설명으로 옳지 않은 것은?
① 레코드를 참조할 때 색인을 탐색한 후 색인이 가리키는 포인터를 사용하여 직접 참조할 수 있다.
② 레코드를 추가 및 삽입하는 경우, 파일 전체를 복사할 필요가 없다.
③ 인덱스를 저장하기 위한 공간과 오버플로우 처리를 위한 별도의 공간이 필요 없다.
④ 색인 구역은 트랙 색인 구역, 실린더 색인 구역, 마스터 색인 구역으로 구성된다.', 
3, 
'색인 순차 파일은 인덱스를 저장하기 위한 공간과 오버플로우 처리를 위한 별도의 공간이 필요하기 때문에 공간 효율성은 떨어지는 편입니다.', 
'색인 순차 파일',
 0)

insert into tb_quest values(quest_seq.nextval, 
1, 
'뷰(VIEW)에 대한 설명으로 옳지 않은 것은?
① DBA는 보안 측면에서 뷰를 활용할 수 있다.
② 뷰 위에 또 다른 뷰를 정의할 수 있다.
③ 뷰에 대한 삽입, 갱신, 삭제 연산 시 제약 사항이 따르지 않는다.
④ 뷰의 정의는 ALTER문을 이용하여 변경할 수 없다.', 
3, 
'뷰로 구성된 내용에 따라 삽입,삭제, 갱신 연산 제한', 
'뷰',
 0)
insert into tb_quest values(quest_seq.nextval, 
1, 
'정규화의 목적으로 옳지 않은 것은?
① 어떠한 릴레이션이라도 데이터베이스 내에서 표현 가능하게 만든다.
② 데이터 삽입 시 릴레이션을 재구성할 필요성을 줄인다.
③ 중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 야기한다.
④ 효과적인 검색 알고리즘을 생성할 수 있다.',
3,
'3. 중복을 배제하여 삽입, 삭제, 갱신 이상의 발생을 방지한다.',
'정규화', 
0)
insert into tb_quest values(quest_seq.nextval,
1,
' 트랜잭션들을 수행하는 도중 장애로 인해 손상된 데이터베이스를 손상되기 이전의 정상적인 상태로 복구시키는 작업은?
① Recovery  ② Restart
③ Commit  ④ Abort',
3,
'1. 회복2. 재시작3. 완료(변경 적용)4. 중단',
'트랜잭션',
0)
insert into tb_quest values(quest_seq.nextval,
2,
'캐시기억장치 운영에서 매핑 함수의 의미를 가장 옳게 설명한 것은?
① 주기억장치와 I/O장치의 블록 크기를 정하는 방법이다.
② 캐시 기억장치의 적중률과 미스 율을 정하는 방법이다.
③ 캐시 기억장치의 태그 필드에 값을 인코딩하는 방법이다.
④ 주기억장치의 한 개의 블록을 캐시 라인에 배정하는 규칙이다.',
4,
'주기억 장치의 블록 캐시에 사상하는 방법 : 주기억 장치의 임의의 블록을 지정된 캐시 블록에 기억시키는 방법을 말한다.- 직접사상(Direct Mapping) : 기억시킬 캐시 블록 결정 함수는 주기억 장치의 블록 번호를 캐시 전체의 블록 수로 나눈 나머지로 결정한다.- 전체 연합 사상(Fully Associative Mapping) : 주기억 장치 임의의 블록 하나를 캐시 전체 블록 중 아무 곳이나 하나를 정해서 기억시키는 방법이다.- 세트 연합 사상(Set Associative Mapping) : 직접사상+연합사상',
'캐시기억장치',
0)
insert into tb_quest values(quest_seq.nextval,
2,
'부동 소수점 파이프라인의 비교기, 시프터, 가산-감산기, 인크리멘터, 디크리멘터가 모두 조합 회로로 구성된다고 가정할 때, 네 세그먼트의 시간 지연이 t1=60ns, t2=70ns, t3=100ns, t4=80ns이고, 중간 레지스터의 지연이 tr=10ns라고 가정하면 비 파이프라인 구조에 비해 약 몇 배의 속도가 향상되는가?
① 0.6  ② 1.1
③ 2.4  ④ 2.9',
4,
'클록 사이클은 제일 큰친구인 t3에다가 지연시간 10을 더한 110으로 결정 되어야한다.이와 동등한 환경에서의 비파이프라인은 그냥 다 더한(t1~t4+tr) 320이 되고 320/110은 2.9이므로 2.9배 향상 된것이다..t1~t4 + (t중 제일높은것에서 +10) /(t중 제일높은것에서 +10한 값)',
'부동소수점',
0)
insert into tb_quest values(quest_seq.nextval,
2,
'DMA에 대한 설명으로 가장 옳지 않은 것은?
① DMA는 Direct Memory Access의 약자이다.
② DMA는 기억장치와 주변장치 사이의 직접적인 데이터 전송을 제공한다.
③ DMA는 블록으로 대용량의 데이터를 전송할 수 있다.
④ DMA는 입출력 전송에 따른 CPU의 부하를 증가시킬 수 있다.',
4,
'DMA 방식은 입출력 자료 전송 시 CPU를 거치지 않기 때문데 CPU의 부담이 없습니다.',
'DMA방식',
0)
insert into tb_quest values(quest_seq.nextval,
2,
'가상메모리 시스템에서 20비트의 논리 주소가 4비트의 세그먼트 번호, 8비트의 페이지 번호, 8비트의 워드 필드로 구성될 경우에 한 세그먼트의 최대 크기로 옳은 것은?
① 256 word  ② 4 kilo word
③ 16 kilo word ④ 64 kilo word',
4,
'세그먼트의 최대 크기 = (페이지 번호 + 워드 필드) * 논리 주소계산 => (8+8)*4 = 64세그먼트 최대크기 = 2^(페이지 번호 비트 + 워드 필드 비트)2^16 = 2^6 * 2^10 = 2^6 * kilo = 64 kilo',
'가상메모리',
0)
insert into tb_quest values(quest_seq.nextval,
2,
' 소프트웨어에 의한 우선순위 판별 방법으로 가장 옳은 것은?
① 인터럽트 벡터 ② 폴링
③ 채널  ④ 핸드쉐이킹',
2,
'인터럽트 우선순위 판별방법소프트웨어적인 방법 : 폴링 하드웨어적인 방법 : 데이지 체인',
'sw우선순위',
0)

insert into tb_quest values(quest_seq.nextval,
3,
'디스크 입·출력 요청 대기 큐에 다음과 같은 순서로 기억되어 있다. 현재 헤드가 53에 있을 때, 이들 모두를 처리하기 위한 총이동 거리는 얼마인가? (단, FCFS 방식을 사용한다.)

① 320  ② 640 ③ 960  ④ 1240',
2,
'First-come-first-served(FCFS) 방식은 시스템에 들어와 가장 오랫동안 기다린 프로세스를 선택하여 처리한다.즉 처리 순서는 대기 큐에 있는 순서 (98->183->37->122->14->124->65->67)이다.현재 헤드가 53에 있으므로 98까지의 이동거리는 45이다.다음 98에서 183까지의 이동거리는 85다음 183에서 37까지의 이동거리는 146다음 37에서 122까지의 이동거리는 85다음 122에서 14까지의 이동거리는 108다음 14에서 124까지의 이동거리는 110다음 124에서 65까지의 이동거리는 59다음 65에서 67까지의 이동거리는 2즉 총 이동거리는45+85+146+85+108+110+59+2 = 640 이다.',
'디스크입출력',
0)

insert into tb_quest values(quest_seq.nextval,
3,
'OS의 가상기억장치 관리에서 프로세스가 일정 시간동안 자주 참조하는 페이지들의 집합을 의미하는 것은?
① Thrashing  ② Deadlock
③ Locality  ④ Working Set',
4,
'워킹 셋(Working Set)-프로세스가 일정 시간 동안 자주 참조하는 페이지들의 집합.',
'os가상기억장치',
0)

insert into tb_quest values(quest_seq.nextval,
3,
'프로세스가 자원을 기다리고 있는 시간에 비례하여 우선순위를 부여함으로써 무기한 문제를 방지하는 기법은?
① Aging  ② Reusable
③ Circular wait ④ Deadly embrace',
1,
'에이징(Aging) - 특정프로세스의 우선순위가 낮아 무한정 기다리게 되는 경우, 양보하거나 기다린 시간에 비례하여 일정 시간이 지나면 우선순위를 한단계씩 높여 무기한 문제를 해결하는 기법- SJF나 우선순위 기법에서 발생할 수 있는 무한 연기 상태, 기아 상태를 예방 할 수 있다',
'프로세스',
0)

insert into tb_quest values(quest_seq.nextval,
3,
'Public Key System에 대한 설명으로 틀린 것은?
① 공용키 암호화 기법을 이용한 대표적 암호화 방식에는 RSA가 있다.
② 암호화키와 해독키가 따로 존재한다.
③ 암호화키와 해독키는 보안되어야 한다.
④ 키의 분배가 용이하다.',
3,
'해독키만 보안되어야 한다',
'publicKey',
0)

insert into tb_quest values(quest_seq.nextval,
3,
'스레드(Thread)에 대한 설명으로 가장 거리가 먼 것은?
① 하나의 스레드는 상태를 줄인 경량 프로세스라고도 한다.
② 프로세스 내부에 포함되는 스레드는 공통적으로 접근 가능한 기억장치를 통해 효율적으로 통신한다.
③ 스레드를 사용하면 하드웨어, 운영체제의 성능과 응용 프로그램의 처리율을 향상시킬 수 있다.
④ 하나의 프로세스에는 하나의 스레드만 존재하여 독립성을 보장한다.',
4,
'하나의 프로세스에 하나의 스레드가 존재하는 경우에는 단일 스레드,하나 이상의 스레드가 존재하는 경우에는 다중 스레드라고 한다.',
'스레드',
0)

insert into tb_quest values(quest_seq.nextval,
4,
'객체지향 테스트 중 구조적 기법에서의 단위 테스트(Unit Test)와 같은 개념은?
① 메소드  ② 클래스
③ 필드  ④ 서브시스템',
2,
'객체지향 모델의 가장 기본인 클래스입니다..단위 테스트는 클래스와 같습니다.',
'객체지향',
0)

insert into tb_quest values(quest_seq.nextval,
4,
'구현 단계에서의 작업 절차를 순서에 맞게 나열한 것은?
ㄱ. 코딩한다.
    ㄴ. 코딩작업을 계획한다.
    ㄷ. 코드를 테스트한다.
    ㄹ. 컴파일 한다.
① ㉠-㉡-㉢-㉣ ② ㉡-㉠-㉣-㉢
③ ㉢-㉠-㉡-㉣ ④ ㉣-㉡-㉠-㉢',
2,
'구현 단계에서의 작업 절차 순서 : 코딩을 계획한다 -> 코딩한다 -> 컴파일 한다 -> 코드를 테스트한다',
'구현단계',
0)
insert into tb_quest values(quest_seq.nextval,
4,
'화이트박스 테스트에 대한 설명으로 가장 옳지 않은 것은?
① 제품의 내부 요소들이 명세서에 따라 수행되고 충분히 실행되는가를 보장하기 위한 검사이다.
② 모듈 안의 작동을 직접 관찰한다.
③ 프로그램 원시 코드의 논리적인 구조를 커버하도록 테스트 케이스를 설계한다.
④ 화이트박스 테스트 기법에는 조건 검사, 루프 검사, 비교 검사 등이 있다.',
4,
'4. 화이트박스 테스트 기법에는 조건 검사, 루프 검사, 데이터 흐름 검사 등이 있다.비교 검사는 블랙박스 테스트 기법 중 하나이다.화이트박스 테스트 종류: 기초 경로 검사, 조건 검사, 루프 검사, 데이터 흐름 검사블랙박스 테스트 종류: 동치 분할 검사, 경계값 분석, 원인-효과 그래프 검사, 오류 예측 검사, 비교 검사',
'테스트',
0)
insert into tb_quest values(quest_seq.nextval,
4,
'소프트웨어 위험의 대표적 특성으로 짝지어진 것 중 가장 적합한 것은?
① 연쇄작용, 확실성 ② 불확실성, 손실
③ 연쇄작용, 예측 ④ 확실성, 예측',
2,
'불확실성 : 위험이 발생할수도 있고 발생하지 않을수도 있다.손실 : 위험이 실제로 발생하면 반드시 손실이나 원하지 않은 결과가 발생한다.',
'sw위험특성',
0)
insert into tb_quest values(quest_seq.nextval,
4,
'Software Engineering의 Engineering이 가지는 의미와 가장 관계없는 것은?
① 예술성  ② 경제성
③ 보편타당성  ④ 적시성',
1,
'소프트웨어 공학(Software Engineering): 가장 경제적이고 신뢰도 높은 소프트웨어를 만들기 위한 방법, 도구와 절차들의 체제▶ 경제성, 적시성, 보편타당성',
'engineering',
0)
insert into tb_quest values(quest_seq.nextval,
5,
'HDLC 프레임의 종류 중 정보프레임에 대한 흐름 제어와 오류 제어를 위해 사용되는 것은?
① I-Frame  ② K-Frame
③ S-Frame  ④ RK-Frame',
3,
'I-Frame(정보프레임) : 제어부가 0으로 시작하는 프레임, 
사용자가 데이터를 전달하거나 피기백킹 기법을 통해 데이터에 대한 확인 응답을 보낼 때사용S-Frame (감독프레임) : 제어부가 10으로 시작하는 프레임,오류 제어와 흐름 제어를 위해 사용U-Frame (비번호프레임) : 제어부가 11로 시작하는 프레임,링크와 동작 모두 설정과 관리, 오류 회복을 수행함',
'HDLC프레임',
0)
insert into tb_quest values(quest_seq.nextval,
5,
' IPv6의 주소체계로 거리가 먼 것은?
① Unicast  ② Anycast
③ Broadcast  ④ Multicast',
3,
'IPv6는 브로드캐스트 주소 없음. 
그 대신 링크 로컬 범위 모든 노드 멀티캐스트 주소 사용',
'IPv6',
0)
insert into tb_quest values(quest_seq.nextval,
5,
'TCP/IP에서 사용되는 논리주소를 물리주소로 변환시켜 주는 프로토콜은?
① TCP  ② ARP
③ ETP  ④ IP',
2,
'TCP : 패킷의 다중화, 순서 제어, 오류 제어, 흐름 제어 기능을 제공함 / 스트림(stream)전송 기능을 제공함
IP : 데이터그램을 기반으로 하는 비연결형 서비스를 제공함 / 패킷의 분해와 조립, 주소지정, 경로 선택 기능을 제공함
반대로 물리(MAC)주소를 논리(IP)주소로 바꿔주는 프로토콜은 RARP입니다 (R은 리버스)',
'TCP/IP',
0)
insert into tb_quest values(quest_seq.nextval,
5,
'전송오류제어 중 오류가 발생한 프레임뿐만 아니라 오류검출 이후의 모든 프레임을 재전송하는 ARQ 방식은?
① Go-back-N ARQ
② Stop-and-Wait ARQ
③ Selective Repeat ARQ
    ④ Non-Selective Repeat ARQ',
1,
'ARQ(자동반복요청) - 오류발생시 수신측은 오류발생을 송신측에 통보하고, 
송신측은 오류발생 블록을 재전송하는 모든 절차를 의미한다
Go-back-N ARQ(정지-대기) : 오류가 발생한 블록이후의 모든 블록을 재전송함연속
 ARQ - Stop-and-Wait ARQ : 송신측에서 한개의 블록을 전송한 후 수신측으로부터 응답을 기다리는방식-
 Selective Repeat ARQ (선택적재전송) : 오류가 발생한 블록만을 재전송, 
수신측에서 데이터를 처리하기 전에 원래순서대로 조립해야되서? 
더 복잡한 논리회로와 큰 용량의 버퍼가 필요함Non-Selective Repeat (X) 선택적재전송 낚시성 보기',
'전송오류제어',
0)
insert into tb_quest values(quest_seq.nextval,
5,
'10Base-5 이더넷의 기본 규격에 대한 설명으로 틀린 것은?
① 전송매체는 동축케이블을 사용한다.
② 최대 전송 거리는 50km이다.
③ 전송방식은 베이스밴드 방식이다.
④ 데이터 전송속도는 10Mbps이다.',
2,
'<문제 해설>10Base-5에서 10은 데이터 전송속도는 
10Mbps를 의미하며 Base는 베이스밴드 방식으로 전송한다는 의미입니다.
전송매체는 굵은 동축케이블을 이용하며, 
5는 한 세그먼트 최대 전송거리는 500m임을 나타냅니다.',
'10Base-5',
0)

